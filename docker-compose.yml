services:
  indexer_db:
    container_name: indexer_db
    image: postgres:16
    restart: unless-stopped
    env_file:
      - .env
    environment:
      POSTGRES_DB: ${DB_NAME}
      POSTGRES_PASSWORD: ${DB_PASS}
    volumes:
      - ./db/init.sql:/docker-entrypoint-initdb.d/init.sql
      - indexer_db:/var/lib/postgresql/data
    ports:
      - "${DB_PORT}:5432"
    shm_size: 1gb
    command: [
      "postgres",
      "-c", "max_connections=200",
      "-c", "shared_buffers=7GB",
      "-c", "shared_preload_libraries=pg_stat_statements",
      "-c", "logging_collector=on",
      "-c", "log_directory=/var/log/postgresql",
      "-c", "log_filename=postgresql.log",
      "-c", "log_line_prefix='%m [%p] %q[user=%u,db=%d,app=%a] '"
    ]

  indexer_redis:
    container_name: indexer_redis
    restart: unless-stopped
    env_file:
      - .env
    image: redis:7
    ulimits:
      memlock: -1
    ports:
      - "${REDIS_PORT}:6379"
    volumes:
      - redis_db:/data
    command:
      [
        "redis-server",
        "--maxmemory-policy",
        "noeviction",
      ]
    healthcheck:
      test: "redis-cli -a ping"
      interval: 5s
      timeout: 20s
      retries: 10

  indexer_processor:
    container_name: indexer_processor
    restart: unless-stopped
    image: ghcr.io/enjin/indexer:${VERSION:-latest}
    env_file:
      - .env
    environment:
      CONTAINER_ROLE: processor
      TRUNCATE_DATABASE: ${TRUNCATE_DATABASE}
    build:
      context: .
      args:
        SENTRY_AUTH_TOKEN: ${SENTRY_AUTH_TOKEN}
    volumes:
      - .env:/app/.env
    depends_on:
      - indexer_db

  indexer_hasura:
    container_name: indexer_hasura
    restart: unless-stopped
    image: hasura/graphql-engine:latest
    env_file:
      - .env
    environment:
      HASURA_GRAPHQL_DATABASE_URL: "postgres://${DB_USER}:${DB_PASS}@${DB_HOST}:5432/${DB_NAME}"
      HASURA_GRAPHQL_ENABLE_SUBSCRIPTIONS: true
      HASURA_GRAPHQL_ENABLE_CONSOLE: true
      HASURA_GRAPHQL_DEV_MODE: true
      HASURA_GRAPHQL_ENABLED_LOG_TYPES: startup,http-log,webhook-log,websocket-log,query-log
    ports:
      - "${HASURA_PORT}:8080"
    depends_on:
      - indexer_db

  indexer_graphql:
    container_name: indexer_graphql
    restart: unless-stopped
    image: ghcr.io/enjin/indexer:${VERSION:-latest}
    environment:
      CONTAINER_ROLE: graphql
    build:
      context: .
    ports:
      - "${GQL_PORT}:4000"
      - "${GQL_METRICS_PORT}:8080"
    volumes:
      - .env:/app/.env
    depends_on:
      - indexer_db

  indexer_worker:
    container_name: indexer_worker
    restart: unless-stopped
    image: ghcr.io/enjin/indexer:${VERSION:-latest}
    environment:
      CONTAINER_ROLE: worker
    build:
      context: .
    ports:
      - "${WORKER_PORT}:9090"
    volumes:
      - .env:/app/.env
    depends_on:
      - indexer_db
      - indexer_redis

volumes:
  indexer_db:
  redis_db:
