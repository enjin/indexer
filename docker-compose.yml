services:
  indexer_db_2:
    container_name: indexer_db_2
    image: postgres:16
    restart: unless-stopped
    environment:
      POSTGRES_DB: ${DB_NAME}
      POSTGRES_PASSWORD: ${DB_PASS}
    volumes:
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
      - indexer_db_2:/var/lib/postgresql/data
    ports:
      - "5433:5432"
    command: [
      "postgres",
      "-c", "max_connections=200"
    ]

  indexer_redis:
    container_name: indexer_redis
    image: redis:7.0
    restart: on-failure
    volumes:
      - redis_db:/data
    ports:
      - "6389:6379"

  indexer_processor:
    container_name: indexer_processor
    restart: unless-stopped
    image: ghcr.io/efinity/indexer:${VERSION:-latest}
    environment:
      CONTAINER_ROLE: processor
    build:
      context: .
      args:
        SENTRY_AUTH_TOKEN: ${SENTRY_AUTH_TOKEN}
    volumes:
      - .env:/squid/.env
    depends_on:
      - indexer_db_2
      - indexer_worker

  indexer_graphql:
    container_name: indexer_graphql
    restart: unless-stopped
    image: ghcr.io/efinity/indexer:${VERSION:-latest}
    environment:
      CONTAINER_ROLE: graphql
    build:
      context: .
    ports:
      - "4000:4000"
      - "8080:8080"
    volumes:
      - .env:/squid/.env
    depends_on:
      - indexer_db_2
      - indexer_processor

  indexer_worker:
    container_name: indexer_worker
    restart: unless-stopped
    image: ghcr.io/efinity/indexer:${VERSION:-latest}
    environment:
      CONTAINER_ROLE: worker
    build:
      context: .
    ports:
      - "9090:9090"
    volumes:
      - .env:/squid/.env
    depends_on:
      - indexer_db_2
      - indexer_redis

volumes:
  indexer_db_2:
  redis_db:
  
